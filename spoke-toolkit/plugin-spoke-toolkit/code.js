// Minimal Figma plugin to create Variables and basic Styles from tokens JSON
figma.showUI(__html__, { width: 420, height: 360 });
figma.ui.onmessage = async (msg) => {
  if (msg.type === 'IMPORT_TOKENS') {
    const data = msg.payload;
    await importTokens(data);
  }
};
async function importTokens(data) {
  for (const coll of data.collections || []) {
    const collection = figma.variables.createVariableCollection(coll.name || 'Spoke');
    collection.modes = (coll.modes || ['light']).map((name, idx) => ({ name, modeId: String(idx) }));
    for (const [cssVar, val] of Object.entries(coll.tokens || {})) {
      try {
        const v = figma.variables.createVariable(cssVar.replace(/^--/, ''), collection.id, 'STRING');
        for (const m of collection.modes) {
          v.setValueForMode(m.modeId, String(val));
        }
      } catch (e) {
        // ignore if exists
      }
    }
    const paintKeys = ['--background', '--foreground', '--primary', '--secondary', '--accent', '--muted', '--destructive', '--border', '--ring'];
    for (const key of paintKeys) {
      const varName = key.replace(/^--/, '');
      const style = figma.createPaintStyle();
      style.name = `Spoke/${varName}`;
      style.description = 'Auto-generated by Spoke Toolkit Builder';
      style.paints = [{ type: 'SOLID', color: { r: 0.5, g: 0.5, b: 0.5 } }];
    }
  }
  figma.notify('Imported tokens into Variables and basic Styles.');
}
